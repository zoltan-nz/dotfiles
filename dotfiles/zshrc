### === DEBUG ===
# Run the following command to see how fast/slow your zsh initialization
# time zsh -i -c exit
# Uncomment the next line and the last line of this file.
# zmodload zsh/zprof

### === INITIAL SETUP - IMPORTANT! ===
# Copy ./dotfiles/zshrc.local.template to ~/.zshrc.local and setup your environment variables
# Import your local profile file
[[ -s ~/.zshrc.local ]] && source ~/.zshrc.local
DOTFILES=${DOTFILES:-$HOME/projects/dotfiles}

### === ZSH SETTINGS ===

export ZSH=$DOTFILES/submodules/zsh/oh-my-zsh
export ZSH_CUSTOM=$DOTFILES/submodules/zsh/custom

ZSH_THEME=${LOCAL_ZSH_THEME:-agnoster}
HYPHEN_INSENSITIVE="true"
DISABLE_AUTO_UPDATE="true"
COMPLETION_WAITING_DOTS="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"
ZSH_AUTOSUGGEST_STRATEGY="match_prev_cmd"

### === PLUGINS ===

# zsh-completions - https://github.com/zsh-users/zsh-completions
# zsh-autosuggestions - git://github.com/zsh-users/zsh-autosuggestions
# httpie - https://github.com/jkbrzt/httpie
# fasd - https://github.com/clvv/fasd
# !!!! Don't forget to run `rm ~/.zcompdump*` sometimes... ;)

# Import completion functions from brew packages
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi

plugins=(gitfast git osx zsh-autosuggestions fzf z fasd docker docker-compose zsh-completions kubectl yarn npm pyenv rbenv kubectl mvn go)
autoload -U compinit && compinit

source ${ZSH}/oh-my-zsh.sh

# zsh-syntax-highlighting - https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/INSTALL.md
source ${ZSH_CUSTOM}/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# https://github.com/zsh-users/zsh-history-substring-search
source ${ZSH_CUSTOM}/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh

### === ALIASES ===

# This must have for a proper color support in old gnome-terminal!!! And don't change global TERM!!!
# alias tmux="TERM=xterm-256color tmux attach || tmux new"
# alias zshconfig="vim $DOTFILES/dotfiles/zshrc"
# alias vimconfig="vim $DOTFILES/dotfiles/vimrc"
# alias of="lsof -nP +c 15 | grep LISTEN"

alias c="clear"
alias x="exit"
alias n="node -v"
alias y="yarn"
alias nr="npm run"

# Install grip with `pip install grip`
alias markd="grip"

# Load local alias file if exists
[[ -s "$HOME/.alias" ]] && source ~/.alias

### === NODEJS ===
# NodeJS support with NVM, nvm slows down initialization hence lazy loaded
# git clone https://github.com/creationix/nvm ~/.nvm

# The following few lines setup lazyloading for node global commands
declare -a NODE_GLOBALS_NPM=(`find $HOME/.nvm/versions/node -maxdepth 3 -type l -wholename '*/bin/*'`)
declare -a NODE_GLOBALS_YARN=(`find $HOME/.yarn/bin -maxdepth 3 -type l -wholename '*/bin/*'`)
declare -a NODE_GLOBALS=(`echo ${NODE_GLOBALS_NPM} ${NODE_GLOBALS_YARN} | xargs -n1 basename | sort | uniq`)
NODE_GLOBALS+=("node")
NODE_GLOBALS+=("nvm")
load_nvm () {
    export NVM_DIR=~/.nvm
    [[ -s "$NVM_DIR/nvm.sh" ]] && . "$NVM_DIR/nvm.sh"
    export NODE_PATH="$NVM_BIN"
}
for cmd in "${NODE_GLOBALS[@]}"; do
    eval "${cmd}(){ unset -f ${NODE_GLOBALS}; load_nvm; ${cmd} \$@ }"
done

# Add yarn bin to PATH
export PATH=$PATH:$HOME/.yarn/bin

### === JAVA - SDKMAN ===
# curl -s https://get.sdkman.io | bash

export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

### === FZF ===

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='fd --type f'

### === ITERM ===

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

### === GOOGLE CLOUD SDK ===

# The next line updates PATH for the Google Cloud SDK.
if [ -f "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc" ]; then . "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"; fi

# The next line enables shell command completion for gcloud.
if [ -f "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc" ]; then . "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"; fi

# Kubectl autocompletion!
eval "$(kubectl completion zsh)"

# Uncomment the following when you turn on the performance test in the first line
# zprof
